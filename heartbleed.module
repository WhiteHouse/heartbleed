<?php

/**
 * @file
 * Contains heartbleed forced password reset functionality.
 */

/**
 * Implements hook_menu().
 */
function heartbleed_menu() {
  $items = array();

  $items['user/heartbleed'] = array(
    'page callback' => 'heartbleed_page',
    'access arguments' => array('access content'),
  );

  $items['admin/config/settings/heartbleed'] = array(
    'title' => 'Heartbleed',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('heartbleed_admin_form'),
    'access arguments' => array('administer users'),
  );

  return $items;
}

function heartbleed_admin_form($form, &$form_state) {
  $form = array();

  $form['heartbleed_deadline'] = array(
    '#type' => 'textfield',
    '#title' => t('TODO timestamp name'),
    '#default_value' => variable_get('heartbleed_deadline', 1397876400),
    '#description' => t('Look up unix timestamp !here', array('!here' => url('http://unixtimestamp.com/'))),
  );
  $form['heartbleed_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Heartbleed Message'),
    '#description' => t('Message to be displayed to users'),
    '#default_value' => variable_get('heartbleed_message', t('Please reset your password. More information: http://heartbleed.com/')),
  );

  return system_settings_form($form);
}


/**
 * Implements hook_form_alter().
 */
function heartbleed_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login' || $form_id == 'user_login_block') {
    $form['#submit'][] = 'heartbleed_login_submit';
  }
}

/**
 * Submit handler for the User Login form.
 */
function heartbleed_login_submit($form_id, &$form_state) {
  // Copied from user_logout().
  global $user;

  if (_heartbleed_password_was_already_reset()) {
    return;
  }

  watchdog('user', 'Session closed for %name.', array('%name' => $user->name));
  module_invoke_all('user_logout', $user);

  // Destroy the current session, and reset $user to the anonymous user.
  session_destroy();

  // Unset $_REQUEST. See http://drupal.stackexchange.com/a/372.
  unset($_REQUEST['destination']);
  drupal_goto('user/heartbleed');
}

/**
 * Page callback at /heartbleed. See hook_menu above.
 */
function heartbleed_page() {
  $message = variable_get('heartbleed_message', 'Please reset your password.  More information: http://heartbleed.com/');
  drupal_set_message(t($message), 'error');

  module_load_include('inc', 'user', 'user.pages');
  return drupal_get_form('user_pass');
}

/**
 * Check if user needs to reset password.
 */
function _heartbleed_password_was_already_reset() {
  global $user;

  $timestamp_deadline = variable_get('heartbleed_deadline', 1397876400);
  // Returns 0 if it hasn't been reset.
  $last_reset = _get_timestamp_of_last_reset();

  if ($timestamp_deadline > $last_reset) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Implements hook_user().
 */
function heartbleed_user($op, &$edit, &$account, $category = NULL) {
  global $user;
  if ($op == 'update' && $user->uid == $account->uid) {

    if (!empty($edit['pass'])) {
      _set_password_reset_timestamp();
    }
  }
}

/**
 * Reads from the heartbleed table.
 */
function _get_timestamp_of_last_reset() {
  global $user;
  $uid = $user->uid;

  $query = "SELECT * FROM {heartbleed} WHERE uid = %d";
  $result = db_query($query, $uid);
  $row = db_fetch_array($result);

  if (is_array($row)) {
    return $row['pw_reset_timestamp'];
  }
  else {
    return 0;
  }
}

/**
 * Writes to the heartbleed table.
 */
function _set_password_reset_timestamp() {
  global $user;
  $uid = $user->uid;
  $password_has_not_been_reset = _get_timestamp_of_last_reset() == 0;

  if ($password_has_not_been_reset) {
    // The user hasn't reset their password.
    $query = "INSERT into {heartbleed} (uid, pw_reset_timestamp) VALUES (%d, %d)";
    $result = db_query($query, $uid, time());

  }
  else {
    $query = "UPDATE {heartbleed} SET pw_reset_timestamp = %d WHERE uid = %d";
    $result = db_query($query, time(), $uid);
  }
}
